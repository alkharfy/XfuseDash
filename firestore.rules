rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      // Allow any signed-in user to update any user's profile.
      // WARNING: This is a permissive rule for debugging. We will tighten this.
      allow update: if true;
      allow delete: if isOwner(userId);
    }

    match /clients/{clientId} {
      allow get, list: if true;
      allow create: if isSignedIn() && request.resource.data.registeredBy == request.auth.uid;
      allow update: if isSignedIn() && resource.data.registeredBy == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.registeredBy == request.auth.uid;
    }

    match /notifications/{notificationId} {
      allow get: if isSignedIn();
      allow list: if false; // Users should not be able to list all notifications.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    match /systemLogs/{logId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}
